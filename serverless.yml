#api gateway service name
service: employee-crud-api
#provider details
provider:
#provider name
  name: aws
  #runtime for the project
  runtime: nodejs18.x
  #deployment stage / environment
  stage: dev
  #region to host
  region: ap-south-1
  #environment details
  environment:
  #Dynamodb table name - read from this file, custom header, employeeTableName key
    DYNAMODB_TABLE_NAME: ${self:custom.employeeTableName}
#custom field, which can be used as a variable
custom:
#generate table name adding suffix from provider - stage name
  employeeTableName: emp-table-${self:provider.stage}
#plugins required 
plugins:
# creates iam roles for each function
  - serverless-iam-roles-per-function
#lambda functions section
functions:
#function name
  getEmployee:
   #starting point of the function - point to the function
    handler: app.getEmployee
    #name of lambda function
    name: get-employee
    #default memory assigned
    memorySize: 128 # mb
    #waiting for response timeout
    timeout: 5 # seconds
    #events for triggering the lambda function
    events:
     #http request
      - http:
      #path of api endpoint
          path: employee/{empId}
          #http Get method
          method: GET
    #role definition for this lambda function
    iamRoleStatements:
    #allow iam role 
      - Effect: "Allow"
      #allow iam role for this action 
        Action:
          - "dynamodb:GetItem"
           #resource of dynamodb - get attribute name from ARN of employeeTable
        Resource: !GetAtt EmployeeTable.Arn
        
#function name
  getAllEmployees:
    handler: app.getAllEmployees
    name: get-all-employees
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: employees
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: !GetAtt EmployeeTable.Arn
#resources required 
resources:
  Resources:
    EmployeeTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.employeeTableName}
        AttributeDefinitions:
          - AttributeName: empId
            AttributeType: S
        KeySchema:
          - AttributeName: empId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1